import Head from "next/head";
import Image from "next/image";
import { useState, useCallback, useEffect } from "react";
import ButtonSmall from "../components/ButtonSmall";
import BackgroundImages from "../components/BackgroundImages";
import ModalExpand from "../components/ModalExpand";

export default function Home() {
  const [day, setDay] = useState(true);
  const [menuToggle, setMenuToggle] = useState(false);

  const [quotes, setQuotes] = useState([]);
  const [currentQuote, setCurrentQuote] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);

  const menuToggleHandler = () => {
    setMenuToggle(!menuToggle);
  };

  const dayToggleHandler = () => {
    setDay(!day);
  };

  const fetchQuotesHandler = useCallback(async () => {
    setIsLoading(true);
    setError(null);
    try {
      const response = await fetch(
        "https://satoshi-quotes-default-rtdb.asia-southeast1.firebasedatabase.app/quotes.json"
      );

      if (!response.ok) {
        throw new Error("Something went wrong!");
      }

      const data = await response.json();

      const transformedQuotes = await data.map((quote) => {
        return {
          id: quote.id,
          quote: quote.en,
        };
      });

      setQuotes(transformedQuotes);
    } catch (error) {
      setError(error.message);
    }
    setIsLoading(false);
  }, []);

  useEffect(() => {
    fetchQuotesHandler();
  }, [fetchQuotesHandler]);

  const quoteToggleHandler = async () => {
    let randomQuoteInt = Math.floor(Math.random() * quotes.length);
    setCurrentQuote(quotes[randomQuoteInt]?.quote);
  };

  useEffect(() => {
    quoteToggleHandler();
  }, [quotes]);

  return (
    <div>
      <Head>
        <title>Bitcoin Clock</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon-32x32.png' />
      </Head>

      <main className='relative select-none'>
        <div className='absolute z-20 flex h-full w-full flex-col justify-end overflow-hidden'>
          <div
            className={`${
              menuToggle
                ? `lg:my-auto lg:pt-0 lg:pb-0`
                : `h-full lg:pt-14 lg:pb-24`
            } flex w-full flex-col justify-between px-[26px] pt-8 pb-10 md:pl-16 md:pr-32 md:pt-20 md:pb-16 lg:px-[165px] `}
          >
            <div
              className={`${
                menuToggle && `hidden`
              } flex justify-between lg:justify-start`}
            >
              <div>
                <p className='mb-2 text-[12px] leading-[22px] text-white md:mb-3 md:text-[18px] md:leading-[28px] lg:w-[540px]'>
                  {currentQuote}
                </p>
                <p className='text-[12px] font-bold leading-[22px] text-white md:text-[18px] md:leading-[28px]'>
                  Satoshi Nakamoto
                </p>
              </div>
              <div className='h-[18px]'>
                <svg
                  xmlns='http://www.w3.org/2000/svg'
                  className='ml-4 w-[18px] cursor-pointer fill-[#fff] pt-2 opacity-50 hover:opacity-100'
                  onClick={quoteToggleHandler}
                >
                  <path d='M7.188 10.667a.208.208 0 01.147.355l-2.344 2.206a5.826 5.826 0 009.578-2.488l2.387.746A8.322 8.322 0 013.17 14.94l-2.149 2.022a.208.208 0 01-.355-.148v-6.148h6.52zm7.617-7.63L16.978.958a.208.208 0 01.355.146v6.23h-6.498a.208.208 0 01-.147-.356L13 4.765A5.825 5.825 0 003.43 7.26l-2.386-.746a8.32 8.32 0 0113.76-3.477z' />
                </svg>
              </div>
            </div>
            <div className='lg:flex lg:items-end lg:justify-between'>
              <div>
                <div className='mb-4 flex items-center'>
                  {day ? (
                    <Image
                      src='/desktop/icon-sun.svg'
                      alt=''
                      height={24}
                      width={24}
                    />
                  ) : (
                    <Image
                      src='/desktop/icon-moon.svg'
                      alt=''
                      height={24}
                      width={23}
                    />
                  )}
                  <h6 className='ml-4 leading-[25px] tracking-[3px] text-white lg:text-[20px] lg:leading-[28px] lg:tracking-[4px]'>
                    {day ? "Good Morning" : "Good Evening"}
                    <span className='hidden md:inline-block'>{`, It's Currently`}</span>
                  </h6>
                </div>
                <div className='mb-4'>
                  <h1 className='inline-block align-baseline text-[100px] leading-[100px] text-white md:text-[175px] md:leading-[175px] lg:text-[200px] lg:leading-[200px]'>
                    23:37
                    <span className='font-inter text-[15px] font-light uppercase leading-[28px] tracking-[0px] text-white md:text-[32px] md:leading-[28px] lg:text-[40px]'>
                      BST
                    </span>
                  </h1>
                </div>
                <h6 className='mb-12 font-bold text-white md:tracking-[3.6px] lg:mb-0 lg:text-[24px] lg:leading-[28px] lg:tracking-[4.8px]'>
                  in LONDON, UK
                </h6>
              </div>
              <div className='relative'>
                <ButtonSmall
                  expander={menuToggle}
                  onClick={menuToggleHandler}
                />
              </div>
            </div>
          </div>
          {menuToggle && <ModalExpand day={day} menuToggle={menuToggle} />}{" "}
        </div>
        <div className='absolute z-10 h-screen w-full bg-black opacity-40'></div>

        <BackgroundImages day={day} />
      </main>

      <footer></footer>
    </div>
  );
}
